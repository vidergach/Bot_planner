package org.example;

import java.util.concurrent.ConcurrentHashMap;

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è Telegram –±–æ—Ç–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–¥–∞—á.
 * –£–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–¥–∞—á–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –∏–∑–æ–ª—è—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏.
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω—ã–π –¥–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑ ConcurrentHashMap.
 *
 * @see UserTasks
 * @see ConcurrentHashMap
 */

public class MessageHandler {

    private final ConcurrentHashMap<String, UserTasks> userDataMap = new ConcurrentHashMap<>();
    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç.
     * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ—Ç —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     *
     * @param userInput —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @param userId —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @return —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
     */
    public String processUserInput(String userInput, String userId) {
        System.out.println("—Å–æ–æ–±—â–µ–Ω–∏–µ: " + userInput + " –æ—Ç: " + userId);

        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        UserTasks userTasks = userDataMap.computeIfAbsent(userId, k -> new UserTasks());

        String outputText = processCommand(userInput, userTasks);
        System.out.println("–û—Ç–≤–µ—Ç: " + outputText);
        return outputText;
    }
    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     *
     * @param userInput —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã
     * @param userTasks –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @return —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã
     */
    private String processCommand(String userInput, UserTasks userTasks) {
        if ("/start".equals(userInput)) {
            return startMessage();
        } else if ("/help".equals(userInput)) {
            return helpMessage();
        } else if(userInput.startsWith("/done")){
            return markTaskDone(userInput, userTasks);
        } else if("/dTask".equals(userInput)) {
            return donedTasks(userTasks);
        }
        else if(userInput.startsWith("/add")){
            return addTask(userInput, userTasks);
        } else if("/tasks".equals(userInput)){
            return showTasks(userTasks);
        }
        else if(userInput.startsWith("/delete")){
            return deleteTask(userInput, userTasks);
        }
        else {
            return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.\n" +
                    "–í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.";
        }
    }

    /**
     * –û—Ç–º–µ—á–∞–µ—Ç –∑–∞–¥–∞—á—É –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—É—é.
     * –ü–µ—Ä–µ–º–µ—â–∞–µ—Ç –∑–∞–¥–∞—á—É –∏–∑ —Å–ø–∏—Å–∫–∞ —Ç–µ–∫—É—â–∏—Ö –≤ —Å–ø–∏—Å–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö.
     *
     * @param userInput —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã —Å –∑–∞–¥–∞—á–µ–π
     * @param userTasks –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @return —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
     */
    private String markTaskDone(String userInput, UserTasks userTasks) {
        if (userInput.length() <= 6) {
            return "–£–ø—Å\uD83D\uDE05, –ø–æ—Ö–æ–∂–µ –≤—ã " +
                    "–∑–∞–±—ã–ª–∏ —É–∫–∞–∑–∞—Ç—å –∑–∞–¥–∞—á—É –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /done \n" +
                    "–ù–∞–ø—Ä–∏–º–µ—Ä: /done –ü–æ–ª–∏—Ç—å —Ü–≤–µ—Ç—ã";
        }
        String task = userInput.substring(6).trim();
        if (!userTasks.getTasks().contains(task)) {
            return "–ó–∞–¥–∞—á–∞ \"" + task + "\" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ!";
        }
        userTasks.getTasks().remove(task);
        userTasks.getCompletedTasks().add(task);
        return "–ó–∞–¥–∞—á–∞ \"" + task + "\" –æ—Ç–º–µ—á–µ–Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π!";
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     *
     * @param userTasks –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @return —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
     */
    private String donedTasks(UserTasks userTasks) {
        if (userTasks.getCompletedTasks().isEmpty()) {
            return "–°–ø–∏—Å–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –ø—É—Å—Ç!";
        }
        StringBuilder compl_tasks = new StringBuilder("‚úÖ –í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á:\n");
        for (int i = 0; i < userTasks.getCompletedTasks().size(); i++) {
            compl_tasks.append("  ").append(i + 1).append(". ").append(userTasks.getCompletedTasks().get(i)).append(" ‚úî\n");
        }
        return compl_tasks.toString();
    }

    /**
     * –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É –≤ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã –∏ –ø—É—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.
     *
     * @param userInput —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã —Å –∑–∞–¥–∞—á–µ–π
     * @param userTasks –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @return —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è
     */
    private String addTask(String userInput, UserTasks userTasks) {
        if (userInput.length() <= 5) {
            return "–£–ø—Å\uD83D\uDE05, –ø–æ—Ö–æ–∂–µ –≤—ã " +
                    "–∑–∞–±—ã–ª–∏ —É–∫–∞–∑–∞—Ç—å –∑–∞–¥–∞—á—É –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /add \n" +
                    "–ù–∞–ø—Ä–∏–º–µ—Ä: /add –ü–æ–ª–∏—Ç—å —Ü–≤–µ—Ç—ã";
        }
        String task = userInput.substring(5).trim();
        if (task.isEmpty()) {
            return "–ó–∞–¥–∞—á–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π!";
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –∑–∞–¥–∞—á—É
        if (userTasks.getTasks().contains(task)) {
            return "–ó–∞–¥–∞—á–∞ \"" + task + "\" —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ!";
        }

        userTasks.getTasks().add(task);
        return "–ó–∞–¥–∞—á–∞ \"" + task + "\" –¥–æ–±–∞–≤–ª–µ–Ω–∞!";
    }
    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ç–µ–∫—É—â–∏—Ö –∑–∞–¥–∞—á –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     *
     * @param userTasks –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @return —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
     */
    private String showTasks(UserTasks userTasks) {
        if (userTasks.getTasks().isEmpty())
            return "–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –ø—É—Å—Ç!";
        StringBuilder list_tasks = new StringBuilder("–í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∑–∞–¥–∞—á:\n");
        for (int i = 0; i < userTasks.getTasks().size(); i++) {
            list_tasks.append("").append(i + 1).append(". ").append(userTasks.getTasks().get(i)).append("\n");
        }
        return list_tasks.toString();
    }

    /**
     * –£–¥–∞–ª—è–µ—Ç –∑–∞–¥–∞—á—É –∏–∑ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
     *
     * @param userInput —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã —Å –∑–∞–¥–∞—á–µ–π
     * @param userTasks –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * @return —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —É–¥–∞–ª–µ–Ω–∏—è
     */
    private String deleteTask(String userInput, UserTasks userTasks) {
        if (userInput.length() <= 8) {
            return "–£–ø—Å\uD83D\uDE05, –ø–æ—Ö–æ–∂–µ –≤—ã –∑–∞–±—ã–ª–∏ —É–∫–∞–∑–∞—Ç—å –∑–∞–¥–∞—á—É –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /delete.\n" +
                    "–ù–∞–ø—Ä–∏–º–µ—Ä: /delete –ü–æ–ª–∏—Ç—å —Ü–≤–µ—Ç—ã";
        }
        String task = userInput.substring(8).trim();
        if (!userTasks.getTasks().contains(task)) {
            return "–ó–∞–¥–∞—á–∞ \"" + task + "\" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å–ø–∏—Å–∫–µ!";
        }
        userTasks.getTasks().remove(task);
        return "üóëÔ∏è –ó–∞–¥–∞—á–∞ \"" + task + "\" —É–¥–∞–ª–µ–Ω–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á!";
    }


    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫–æ–º–∞–Ω–¥.
     *
     * @return –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
     */
    private String startMessage () {
        return "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á! \uD83D\uDC31 üìù \n" +
                "–Ø –º–æ–≥—É –æ—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞—Ç—å –≤–∞—à–∏ –∑–∞–¥–∞—á–∏.\n" +
                "–ö–æ–º–∞–Ω–¥—ã: \n" +
                "/add - –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É\n" +
                "/tasks - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á\n" +
                "/done - –æ—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π\n"+
                "/dTask - —Å–ø–∏—Å–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á\n" +
                "/delete - —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É\n"+
                "/help - –ø–æ–º–æ—â—å\n";
        }
    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
     *
     * @return —Å–ø—Ä–∞–≤–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
     */
    private String helpMessage () {
        return "–°–ø—Ä–∞–≤–∫–∞ –ø–æ —Ä–∞–±–æ—Ç–µ:\n" +
                "–Ø –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—áüòä üìù\n" +
                "–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã: \n" +
                "/add - –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É\n" +
                "/tasks - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á\n" +
                "/done - –æ—Ç–º–µ—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π\n"+
                "/dTask - —Å–ø–∏—Å–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á\n" +
                "/delete - —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞—á—É\n"+
                "/help - –ø–æ–º–æ—â—å\n"+
                "\n"+
                "–ù–∞–ø—Ä–∏–º–µ—Ä: \n"+
                "/add –ü–æ–ª–∏—Ç—å —Ü–≤–µ—Ç—ã\n" +
                "- –ó–∞–¥–∞—á–∞ \"–ü–æ–ª–∏—Ç—å —Ü–≤–µ—Ç—ã\" –¥–æ–±–∞–≤–ª–µ–Ω–∞!\n\n" +
                "/add –ù–∞–∫–æ—Ä–º–∏—Ç—å –∫–æ—Ç–∞\n" +
                "- –ó–∞–¥–∞—á–∞ \"–ù–∞–∫–æ—Ä–º–∏—Ç—å –∫–æ—Ç–∞\" –¥–æ–±–∞–≤–ª–µ–Ω–∞!\n\n" +
                "/add –ü–æ–ª–∏—Ç—å —Ü–≤–µ—Ç—ã\n" +
                "- –ó–∞–¥–∞—á–∞ \"–ü–æ–ª–∏—Ç—å —Ü–≤–µ—Ç—ã\" —É–∂–µ –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ!\n\n" +
                "/tasks\n" +
                "- –í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∑–∞–¥–∞—á:\n" +
                "  1. –ü–æ–ª–∏—Ç—å —Ü–≤–µ—Ç—ã\n" +
                "  2. –ù–∞–∫–æ—Ä–º–∏—Ç—å –∫–æ—Ç–∞\n\n" +
                "/done –ü–æ–ª–∏—Ç—å —Ü–≤–µ—Ç—ã\n" +
                "- –ó–∞–¥–∞—á–∞ \"–ü–æ–ª–∏—Ç—å —Ü–≤–µ—Ç—ã\" –æ—Ç–º–µ—á–µ–Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π!\n\n" +
                "/dTask\n" +
                "- ‚úÖ –í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á:\n" +
                "  1. –ü–æ–ª–∏—Ç—å —Ü–≤–µ—Ç—ã ‚úî\n\n" +
                "/delete –ù–∞–∫–æ—Ä–º–∏—Ç—å –∫–æ—Ç–∞\n" +
                "- üóëÔ∏è –ó–∞–¥–∞—á–∞ \"–ù–∞–∫–æ—Ä–º–∏—Ç—å –∫–æ—Ç–∞\" —É–¥–∞–ª–µ–Ω–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á!";
        }
    }